{"ast":null,"code":"import _slicedToArray from \"/home/user/Desktop/jx/react/my-cart/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { ssrWindow } from \"./chunk-TGVXP7CR.mjs\";\nimport { ssrDocument } from \"./chunk-2GW6Q5BU.mjs\";\n\n// src/env.tsx\nimport { createContext, startTransition, useContext, useMemo, useState, useEffect } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar mockEnv = {\n  window: ssrWindow,\n  document: ssrDocument\n};\nvar defaultEnv = typeof window !== \"undefined\" ? {\n  window: window,\n  document: document\n} : mockEnv;\nvar EnvironmentContext = createContext(defaultEnv);\nEnvironmentContext.displayName = \"EnvironmentContext\";\nfunction useEnvironment() {\n  return useContext(EnvironmentContext);\n}\nfunction EnvironmentProvider(props) {\n  var children = props.children,\n    environmentProp = props.environment;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    node = _useState2[0],\n    setNode = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    mounted = _useState4[0],\n    setMounted = _useState4[1];\n  useEffect(function () {\n    return setMounted(true);\n  }, []);\n  var context = useMemo(function () {\n    if (environmentProp) {\n      return environmentProp;\n    }\n    var doc = node == null ? void 0 : node.ownerDocument;\n    var win = node == null ? void 0 : node.ownerDocument.defaultView;\n    var env = doc ? {\n      document: doc,\n      window: win\n    } : defaultEnv;\n    return env;\n  }, [node, environmentProp]);\n  return /* @__PURE__ */jsxs(EnvironmentContext.Provider, {\n    value: context,\n    children: [children, !environmentProp && mounted && /* @__PURE__ */jsx(\"span\", {\n      id: \"__chakra_env\",\n      hidden: true,\n      ref: function ref(el) {\n        startTransition(function () {\n          if (el) setNode(el);\n        });\n      }\n    })]\n  });\n}\nEnvironmentProvider.displayName = \"EnvironmentProvider\";\nexport { useEnvironment, EnvironmentProvider };","map":null,"metadata":{},"sourceType":"module"}